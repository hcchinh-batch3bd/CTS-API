#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Contribute_Tracking_System_API
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_A55B63_huynhchinh307")]
	public partial class APIDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMISSION_PROCESS(MISSION_PROCESS instance);
    partial void UpdateMISSION_PROCESS(MISSION_PROCESS instance);
    partial void DeleteMISSION_PROCESS(MISSION_PROCESS instance);
    partial void InsertEMPLOYEE(EMPLOYEE instance);
    partial void UpdateEMPLOYEE(EMPLOYEE instance);
    partial void DeleteEMPLOYEE(EMPLOYEE instance);
    partial void InsertMISSION(MISSION instance);
    partial void UpdateMISSION(MISSION instance);
    partial void DeleteMISSION(MISSION instance);
    partial void InsertTYPE_MISSION(TYPE_MISSION instance);
    partial void UpdateTYPE_MISSION(TYPE_MISSION instance);
    partial void DeleteTYPE_MISSION(TYPE_MISSION instance);
    #endregion
		
		public APIDataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DB_A55B63_huynhchinh307ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public APIDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public APIDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public APIDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public APIDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MISSION_PROCESS> MISSION_PROCESSes
		{
			get
			{
				return this.GetTable<MISSION_PROCESS>();
			}
		}
		
		public System.Data.Linq.Table<EMPLOYEE> EMPLOYEEs
		{
			get
			{
				return this.GetTable<EMPLOYEE>();
			}
		}
		
		public System.Data.Linq.Table<MISSION> MISSIONs
		{
			get
			{
				return this.GetTable<MISSION>();
			}
		}
		
		public System.Data.Linq.Table<TYPE_MISSION> TYPE_MISSIONs
		{
			get
			{
				return this.GetTable<TYPE_MISSION>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MISSION_PROCESS")]
	public partial class MISSION_PROCESS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_employee;
		
		private int _id_mission;
		
		private int _status;
		
		private System.Nullable<System.DateTime> _date;
		
		private int _id;
		
		private EntityRef<EMPLOYEE> _EMPLOYEE;
		
		private EntityRef<MISSION> _MISSION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_employeeChanging(int value);
    partial void Onid_employeeChanged();
    partial void Onid_missionChanging(int value);
    partial void Onid_missionChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public MISSION_PROCESS()
		{
			this._EMPLOYEE = default(EntityRef<EMPLOYEE>);
			this._MISSION = default(EntityRef<MISSION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_employee", DbType="Int NOT NULL")]
		public int id_employee
		{
			get
			{
				return this._id_employee;
			}
			set
			{
				if ((this._id_employee != value))
				{
					if (this._EMPLOYEE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_employeeChanging(value);
					this.SendPropertyChanging();
					this._id_employee = value;
					this.SendPropertyChanged("id_employee");
					this.Onid_employeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_mission", DbType="Int NOT NULL")]
		public int id_mission
		{
			get
			{
				return this._id_mission;
			}
			set
			{
				if ((this._id_mission != value))
				{
					if (this._MISSION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_missionChanging(value);
					this.SendPropertyChanging();
					this._id_mission = value;
					this.SendPropertyChanged("id_mission");
					this.Onid_missionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_MISSION_PROCESS", Storage="_EMPLOYEE", ThisKey="id_employee", OtherKey="id_employee", IsForeignKey=true)]
		public EMPLOYEE EMPLOYEE
		{
			get
			{
				return this._EMPLOYEE.Entity;
			}
			set
			{
				EMPLOYEE previousValue = this._EMPLOYEE.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEE.Entity = null;
						previousValue.MISSION_PROCESSes.Remove(this);
					}
					this._EMPLOYEE.Entity = value;
					if ((value != null))
					{
						value.MISSION_PROCESSes.Add(this);
						this._id_employee = value.id_employee;
					}
					else
					{
						this._id_employee = default(int);
					}
					this.SendPropertyChanged("EMPLOYEE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MISSION_MISSION_PROCESS", Storage="_MISSION", ThisKey="id_mission", OtherKey="id_mission", IsForeignKey=true)]
		public MISSION MISSION
		{
			get
			{
				return this._MISSION.Entity;
			}
			set
			{
				MISSION previousValue = this._MISSION.Entity;
				if (((previousValue != value) 
							|| (this._MISSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MISSION.Entity = null;
						previousValue.MISSION_PROCESSes.Remove(this);
					}
					this._MISSION.Entity = value;
					if ((value != null))
					{
						value.MISSION_PROCESSes.Add(this);
						this._id_mission = value.id_mission;
					}
					else
					{
						this._id_mission = default(int);
					}
					this.SendPropertyChanged("MISSION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMPLOYEE")]
	public partial class EMPLOYEE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_employee;
		
		private string _name_employee;
		
		private string _email;
		
		private System.DateTime _date;
		
		private int _point;
		
		private bool _level_employee;
		
		private string _password;
		
		private bool _status;
		
		private string _apiKey;
		
		private EntitySet<MISSION_PROCESS> _MISSION_PROCESSes;
		
		private EntitySet<MISSION> _MISSIONs;
		
		private EntitySet<TYPE_MISSION> _TYPE_MISSIONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_employeeChanging(int value);
    partial void Onid_employeeChanged();
    partial void Onname_employeeChanging(string value);
    partial void Onname_employeeChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnpointChanging(int value);
    partial void OnpointChanged();
    partial void Onlevel_employeeChanging(bool value);
    partial void Onlevel_employeeChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    partial void OnapiKeyChanging(string value);
    partial void OnapiKeyChanged();
    #endregion
		
		public EMPLOYEE()
		{
			this._MISSION_PROCESSes = new EntitySet<MISSION_PROCESS>(new Action<MISSION_PROCESS>(this.attach_MISSION_PROCESSes), new Action<MISSION_PROCESS>(this.detach_MISSION_PROCESSes));
			this._MISSIONs = new EntitySet<MISSION>(new Action<MISSION>(this.attach_MISSIONs), new Action<MISSION>(this.detach_MISSIONs));
			this._TYPE_MISSIONs = new EntitySet<TYPE_MISSION>(new Action<TYPE_MISSION>(this.attach_TYPE_MISSIONs), new Action<TYPE_MISSION>(this.detach_TYPE_MISSIONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_employee", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_employee
		{
			get
			{
				return this._id_employee;
			}
			set
			{
				if ((this._id_employee != value))
				{
					this.Onid_employeeChanging(value);
					this.SendPropertyChanging();
					this._id_employee = value;
					this.SendPropertyChanged("id_employee");
					this.Onid_employeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_employee", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string name_employee
		{
			get
			{
				return this._name_employee;
			}
			set
			{
				if ((this._name_employee != value))
				{
					this.Onname_employeeChanging(value);
					this.SendPropertyChanging();
					this._name_employee = value;
					this.SendPropertyChanged("name_employee");
					this.Onname_employeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(2000)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_point", DbType="Int NOT NULL")]
		public int point
		{
			get
			{
				return this._point;
			}
			set
			{
				if ((this._point != value))
				{
					this.OnpointChanging(value);
					this.SendPropertyChanging();
					this._point = value;
					this.SendPropertyChanged("point");
					this.OnpointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_level_employee", DbType="Bit NOT NULL")]
		public bool level_employee
		{
			get
			{
				return this._level_employee;
			}
			set
			{
				if ((this._level_employee != value))
				{
					this.Onlevel_employeeChanging(value);
					this.SendPropertyChanging();
					this._level_employee = value;
					this.SendPropertyChanged("level_employee");
					this.Onlevel_employeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apiKey", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string apiKey
		{
			get
			{
				return this._apiKey;
			}
			set
			{
				if ((this._apiKey != value))
				{
					this.OnapiKeyChanging(value);
					this.SendPropertyChanging();
					this._apiKey = value;
					this.SendPropertyChanged("apiKey");
					this.OnapiKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_MISSION_PROCESS", Storage="_MISSION_PROCESSes", ThisKey="id_employee", OtherKey="id_employee")]
		public EntitySet<MISSION_PROCESS> MISSION_PROCESSes
		{
			get
			{
				return this._MISSION_PROCESSes;
			}
			set
			{
				this._MISSION_PROCESSes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_MISSION", Storage="_MISSIONs", ThisKey="id_employee", OtherKey="id_employee")]
		public EntitySet<MISSION> MISSIONs
		{
			get
			{
				return this._MISSIONs;
			}
			set
			{
				this._MISSIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_TYPE_MISSION", Storage="_TYPE_MISSIONs", ThisKey="id_employee", OtherKey="id_employee")]
		public EntitySet<TYPE_MISSION> TYPE_MISSIONs
		{
			get
			{
				return this._TYPE_MISSIONs;
			}
			set
			{
				this._TYPE_MISSIONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MISSION_PROCESSes(MISSION_PROCESS entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = this;
		}
		
		private void detach_MISSION_PROCESSes(MISSION_PROCESS entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = null;
		}
		
		private void attach_MISSIONs(MISSION entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = this;
		}
		
		private void detach_MISSIONs(MISSION entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = null;
		}
		
		private void attach_TYPE_MISSIONs(TYPE_MISSION entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = this;
		}
		
		private void detach_TYPE_MISSIONs(TYPE_MISSION entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MISSION")]
	public partial class MISSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_mission;
		
		private string _name_mission;
		
		private System.DateTime _Stardate;
		
		private int _point;
		
		private int _exprie;
		
		private string _describe;
		
		private int _status;
		
		private int _Count;
		
		private int _id_type;
		
		private int _id_employee;
		
		private EntitySet<MISSION_PROCESS> _MISSION_PROCESSes;
		
		private EntityRef<EMPLOYEE> _EMPLOYEE;
		
		private EntityRef<TYPE_MISSION> _TYPE_MISSION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_missionChanging(int value);
    partial void Onid_missionChanged();
    partial void Onname_missionChanging(string value);
    partial void Onname_missionChanged();
    partial void OnStardateChanging(System.DateTime value);
    partial void OnStardateChanged();
    partial void OnpointChanging(int value);
    partial void OnpointChanged();
    partial void OnexprieChanging(int value);
    partial void OnexprieChanged();
    partial void OndescribeChanging(string value);
    partial void OndescribeChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void Onid_typeChanging(int value);
    partial void Onid_typeChanged();
    partial void Onid_employeeChanging(int value);
    partial void Onid_employeeChanged();
    #endregion
		
		public MISSION()
		{
			this._MISSION_PROCESSes = new EntitySet<MISSION_PROCESS>(new Action<MISSION_PROCESS>(this.attach_MISSION_PROCESSes), new Action<MISSION_PROCESS>(this.detach_MISSION_PROCESSes));
			this._EMPLOYEE = default(EntityRef<EMPLOYEE>);
			this._TYPE_MISSION = default(EntityRef<TYPE_MISSION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_mission", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_mission
		{
			get
			{
				return this._id_mission;
			}
			set
			{
				if ((this._id_mission != value))
				{
					this.Onid_missionChanging(value);
					this.SendPropertyChanging();
					this._id_mission = value;
					this.SendPropertyChanged("id_mission");
					this.Onid_missionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_mission", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string name_mission
		{
			get
			{
				return this._name_mission;
			}
			set
			{
				if ((this._name_mission != value))
				{
					this.Onname_missionChanging(value);
					this.SendPropertyChanging();
					this._name_mission = value;
					this.SendPropertyChanged("name_mission");
					this.Onname_missionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stardate", DbType="Date NOT NULL")]
		public System.DateTime Stardate
		{
			get
			{
				return this._Stardate;
			}
			set
			{
				if ((this._Stardate != value))
				{
					this.OnStardateChanging(value);
					this.SendPropertyChanging();
					this._Stardate = value;
					this.SendPropertyChanged("Stardate");
					this.OnStardateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_point", DbType="Int NOT NULL")]
		public int point
		{
			get
			{
				return this._point;
			}
			set
			{
				if ((this._point != value))
				{
					this.OnpointChanging(value);
					this.SendPropertyChanging();
					this._point = value;
					this.SendPropertyChanged("point");
					this.OnpointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_exprie", DbType="Int NOT NULL")]
		public int exprie
		{
			get
			{
				return this._exprie;
			}
			set
			{
				if ((this._exprie != value))
				{
					this.OnexprieChanging(value);
					this.SendPropertyChanging();
					this._exprie = value;
					this.SendPropertyChanged("exprie");
					this.OnexprieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_describe", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string describe
		{
			get
			{
				return this._describe;
			}
			set
			{
				if ((this._describe != value))
				{
					this.OndescribeChanging(value);
					this.SendPropertyChanging();
					this._describe = value;
					this.SendPropertyChanged("describe");
					this.OndescribeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_type", DbType="Int NOT NULL")]
		public int id_type
		{
			get
			{
				return this._id_type;
			}
			set
			{
				if ((this._id_type != value))
				{
					if (this._TYPE_MISSION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_typeChanging(value);
					this.SendPropertyChanging();
					this._id_type = value;
					this.SendPropertyChanged("id_type");
					this.Onid_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_employee", DbType="Int NOT NULL")]
		public int id_employee
		{
			get
			{
				return this._id_employee;
			}
			set
			{
				if ((this._id_employee != value))
				{
					if (this._EMPLOYEE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_employeeChanging(value);
					this.SendPropertyChanging();
					this._id_employee = value;
					this.SendPropertyChanged("id_employee");
					this.Onid_employeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MISSION_MISSION_PROCESS", Storage="_MISSION_PROCESSes", ThisKey="id_mission", OtherKey="id_mission")]
		public EntitySet<MISSION_PROCESS> MISSION_PROCESSes
		{
			get
			{
				return this._MISSION_PROCESSes;
			}
			set
			{
				this._MISSION_PROCESSes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_MISSION", Storage="_EMPLOYEE", ThisKey="id_employee", OtherKey="id_employee", IsForeignKey=true)]
		public EMPLOYEE EMPLOYEE
		{
			get
			{
				return this._EMPLOYEE.Entity;
			}
			set
			{
				EMPLOYEE previousValue = this._EMPLOYEE.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEE.Entity = null;
						previousValue.MISSIONs.Remove(this);
					}
					this._EMPLOYEE.Entity = value;
					if ((value != null))
					{
						value.MISSIONs.Add(this);
						this._id_employee = value.id_employee;
					}
					else
					{
						this._id_employee = default(int);
					}
					this.SendPropertyChanged("EMPLOYEE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_MISSION_MISSION", Storage="_TYPE_MISSION", ThisKey="id_type", OtherKey="id_type", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TYPE_MISSION TYPE_MISSION
		{
			get
			{
				return this._TYPE_MISSION.Entity;
			}
			set
			{
				TYPE_MISSION previousValue = this._TYPE_MISSION.Entity;
				if (((previousValue != value) 
							|| (this._TYPE_MISSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TYPE_MISSION.Entity = null;
						previousValue.MISSIONs.Remove(this);
					}
					this._TYPE_MISSION.Entity = value;
					if ((value != null))
					{
						value.MISSIONs.Add(this);
						this._id_type = value.id_type;
					}
					else
					{
						this._id_type = default(int);
					}
					this.SendPropertyChanged("TYPE_MISSION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MISSION_PROCESSes(MISSION_PROCESS entity)
		{
			this.SendPropertyChanging();
			entity.MISSION = this;
		}
		
		private void detach_MISSION_PROCESSes(MISSION_PROCESS entity)
		{
			this.SendPropertyChanging();
			entity.MISSION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TYPE_MISSION")]
	public partial class TYPE_MISSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_type;
		
		private string _name_type_mission;
		
		private bool _status;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<int> _id_employee;
		
		private EntitySet<MISSION> _MISSIONs;
		
		private EntityRef<EMPLOYEE> _EMPLOYEE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_typeChanging(int value);
    partial void Onid_typeChanged();
    partial void Onname_type_missionChanging(string value);
    partial void Onname_type_missionChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void Onid_employeeChanging(System.Nullable<int> value);
    partial void Onid_employeeChanged();
    #endregion
		
		public TYPE_MISSION()
		{
			this._MISSIONs = new EntitySet<MISSION>(new Action<MISSION>(this.attach_MISSIONs), new Action<MISSION>(this.detach_MISSIONs));
			this._EMPLOYEE = default(EntityRef<EMPLOYEE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_type", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_type
		{
			get
			{
				return this._id_type;
			}
			set
			{
				if ((this._id_type != value))
				{
					this.Onid_typeChanging(value);
					this.SendPropertyChanging();
					this._id_type = value;
					this.SendPropertyChanged("id_type");
					this.Onid_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_type_mission", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string name_type_mission
		{
			get
			{
				return this._name_type_mission;
			}
			set
			{
				if ((this._name_type_mission != value))
				{
					this.Onname_type_missionChanging(value);
					this.SendPropertyChanging();
					this._name_type_mission = value;
					this.SendPropertyChanged("name_type_mission");
					this.Onname_type_missionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_employee", DbType="Int")]
		public System.Nullable<int> id_employee
		{
			get
			{
				return this._id_employee;
			}
			set
			{
				if ((this._id_employee != value))
				{
					if (this._EMPLOYEE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_employeeChanging(value);
					this.SendPropertyChanging();
					this._id_employee = value;
					this.SendPropertyChanged("id_employee");
					this.Onid_employeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_MISSION_MISSION", Storage="_MISSIONs", ThisKey="id_type", OtherKey="id_type")]
		public EntitySet<MISSION> MISSIONs
		{
			get
			{
				return this._MISSIONs;
			}
			set
			{
				this._MISSIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_TYPE_MISSION", Storage="_EMPLOYEE", ThisKey="id_employee", OtherKey="id_employee", IsForeignKey=true)]
		public EMPLOYEE EMPLOYEE
		{
			get
			{
				return this._EMPLOYEE.Entity;
			}
			set
			{
				EMPLOYEE previousValue = this._EMPLOYEE.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEE.Entity = null;
						previousValue.TYPE_MISSIONs.Remove(this);
					}
					this._EMPLOYEE.Entity = value;
					if ((value != null))
					{
						value.TYPE_MISSIONs.Add(this);
						this._id_employee = value.id_employee;
					}
					else
					{
						this._id_employee = default(Nullable<int>);
					}
					this.SendPropertyChanged("EMPLOYEE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MISSIONs(MISSION entity)
		{
			this.SendPropertyChanging();
			entity.TYPE_MISSION = this;
		}
		
		private void detach_MISSIONs(MISSION entity)
		{
			this.SendPropertyChanging();
			entity.TYPE_MISSION = null;
		}
	}
}
#pragma warning restore 1591
